# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    admin.user:
        class: App\Admin\UserAdmin
        arguments: [~, App\Entity\User, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Tous les utilisateurs, on_top: true, icon: '<i class="fa fa-user"></i>', group: Utilisateur }

    admin.bank:
        class: App\Admin\BankAdmin
        arguments: [~, App\Entity\Bank, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Tous les comptes, icon: '<i class="fas fa-money-check-alt"></i>', group: Banques }

    admin.bank.log:
        class: App\Admin\BankLogAdmin
        arguments: [~, App\Entity\BankLogs, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Tous les operations, icon: '<i class="fas fa-money-check-alt"></i>', group: Banques }

    admin.horse:
        class: App\Admin\HorseAdmin
        arguments: [~, App\Entity\Horse, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Tous les chevaux, icon: '<i class="fas fa-horse"></i>', group: Chevaux }

    admin.horse.breed:
        class: App\Admin\HorseBreedAdmin
        arguments: [~, App\Entity\Breed, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Tous les races, group: Chevaux }

    admin.horse.mood:
        class: App\Admin\HorseMoodAdmin
        arguments: [~, App\Entity\Mood, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Tous les humeurs, group: Chevaux }

    admin.horse.temper:
        class: App\Admin\HorseTemperAdmin
        arguments: [~, App\Entity\Temper, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Tous les caractères, group: Chevaux }

    admin.horse.infrastructure:
        class: App\Admin\InfrastructureAdmin
        arguments: [~, App\Entity\Infrastructures, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Tous les infrastructures, group: Chevaux }

    admin.news:
        class: App\Admin\NewsAdmin
        arguments: [~, App\Entity\Actuality, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Tous les actualités,  on_top: true, icon: '<i class="far fa-newspaper"></i>', group: Actualités}

    admin.commercial:
        class: App\Admin\CommercialAdmin
        arguments: [~, App\Entity\Commercials, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Tous les commerciaux, on_top: true, icon: '<i class="fas fa-dumpster"></i>', group: Commerciaux }

